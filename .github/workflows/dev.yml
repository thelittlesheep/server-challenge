name: CI/CD - dev

on:
  push:
    branches: 'feature/CI-CD'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: set up build env file
        run: |
          echo "${{ secrets.ENV }}" > .env
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/server-challenge:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_KEY }}
          passphrase: ${{ secrets.DEV_PASSPHRASE }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/server-challenge:latest
            docker stop server-challenge && docker rm server-challenge
            docker run --name server-challenge --network web_service -d ${{ secrets.DOCKER_USERNAME }}/server-challenge
